{"version":3,"sources":["components/Filter.js","services/jsonServerRequests.js","components/AddNew.js","components/DeletePerson.js","components/StatusMessage.js","App.js","index.js"],"names":["Filter","searchName","handler","value","onChange","newPerson","axios","post","personID","console","log","delete","newPersonDetails","put","get","then","response","data","updateNumber","existingPerson","states","stateSetters","existingPersonIndex","updatedPerson","number","persons","setStatus","setPersons","service","id","name","personsUpdated","splice","concat","statusText","statusType","catch","error","AddNew","newTextHandler","newName","newNumber","setNewName","setNewNumber","newNameHandler","newNumberHandler","onSubmit","event","preventDefault","findIndex","person","window","confirm","type","DeletePersonButton","onClick","target","newPersons","statusStyles","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","failure","statusStyleSelector","StatusMessage","status","setTimeout","style","App","useState","setSearchName","inputName","setter","newValue","searchHandler","useEffect","jsonServerRequests","resp","filteredPersons","searchString","toUpperCase","startsWith","filter","map","key","DeletePerson","ReactDOM","render","document","getElementById"],"mappings":"qMAaeA,EAXA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,QAEzB,OACA,sCAAW,2BACXC,MAAOF,EACPG,SAAUF,M,uBCsBC,EAzBS,SAAAG,GACpB,OAAOC,IACJC,KADI,UAHK,OAGL,YACsBF,IAuBlB,EAlBM,SAAAG,GAEnB,OADAC,QAAQC,IAAR,mBAAwBF,EAAxB,QACOF,IACNK,OADM,UAXO,OAWP,oBACuBH,KAejB,EAXO,SAACA,EAAUI,GAC/B,OAAON,IACJO,IADI,UAjBO,OAiBP,oBACsBL,GAAWI,IAS3B,EALI,WACjB,OAAON,IACNQ,IADM,UAvBO,OAuBP,aAENC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCsDvBC,EAAe,SAAC,GAAwE,IAAvEC,EAAsE,EAAtEA,eAAed,EAAuD,EAAvDA,UAAUe,EAA6C,EAA7CA,OAAOC,EAAsC,EAAtCA,aAAaC,EAAyB,EAAzBA,oBAC5DC,EAAa,2BAAOJ,GAAP,IAAsBK,OAAOnB,EAAUmB,SACnDC,EAAWL,EAAXK,QACAC,EAAwBL,EAAxBK,UAAUC,EAAcN,EAAdM,WACjBC,EACeT,EAAeU,GAAGN,GAChCR,MAAK,SAAAC,GACJP,QAAQC,IAAR,UAAeM,EAASC,KAAKa,KAA7B,sBACA,IAAMC,EAAc,YAAON,GAC3BM,EAAeC,OAAOV,EAAoB,GAC1CK,EAAWI,EAAeE,OAAOjB,EAASC,OAC1CS,EAAU,CACRQ,WAAW,GAAD,OAAIlB,EAASC,KAAKa,KAAlB,qBACVK,WAAW,eAGdC,OAAM,SAAAC,GACL5B,QAAQC,IAAI2B,EAAMrB,UAClBU,EAAU,CACRQ,WAAWG,EAAMrB,SAASC,KAC1BkB,WAAW,gBAMFG,EAvGA,SAAC,GAAyC,IAAxClB,EAAuC,EAAvCA,OAAOC,EAAgC,EAAhCA,aAAakB,EAAmB,EAAnBA,eAEzBC,EAA+BpB,EAA/BoB,QAASC,EAAsBrB,EAAtBqB,UAAWhB,EAAWL,EAAXK,QACpBiB,EAAoDrB,EAApDqB,WAAYC,EAAwCtB,EAAxCsB,aAAchB,EAA0BN,EAA1BM,WAAYD,EAAcL,EAAdK,UACxCkB,EAAiBL,EAAe,OAAOG,GACvCG,EAAmBN,EAAe,SAASI,GAgDjD,OACI,oCACA,0BAAMG,SAhDQ,SAACC,GACfA,EAAMC,iBACN,IAAM3C,EAAW,CACfyB,KAAMU,EACNhB,OAAQiB,GAEJnB,EAAsBG,EAAQwB,WAAU,SAAAC,GAAM,OAAIA,EAAOpB,OAASzB,EAAUyB,QAC5EX,EAAiBM,EAAQH,GAC/Bb,QAAQC,IAAIS,GACRA,GACCgC,OAAOC,QAAP,UACE/C,EAAUyB,KADZ,4FAECX,EAAeK,OAFhB,eAE6BnB,EAAUmB,OAFvC,QAICN,EAAa,CAACC,iBAAed,YAAUe,SAAOC,eAAaC,wBAG/DoB,EAAW,IACXC,EAAa,MAMbhB,EAAWF,EAAQQ,OAAO5B,IAC1BuB,EAAwBvB,GAAWU,MAAK,SAAAC,GACtCU,EAAU,CACRQ,WAAW,SAAD,OAAUlB,EAASC,KAAKa,MAClCK,WAAW,YAEbO,EAAW,IACXC,EAAa,OACZP,OAAM,SAAAC,GACP5B,QAAQC,IAAI2B,EAAMrB,UAClBU,EAAU,CACRQ,WAAWG,EAAMrB,SAASC,KAC1BkB,WAAW,kBAajB,sCACQ,2BACNhC,MAAOqC,EACPpC,SAAUwC,IAEV,wCACU,2BACRzC,MAAOsC,EACPrC,SAAUyC,MAId,6BACE,4BAAQQ,KAAK,UAAb,SAGJ,uCAAab,KCzCJc,EA5BY,SAAC,GAAiC,IAAhCxB,EAA+B,EAA/BA,KAAMV,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,aAC/BI,EAAYL,EAAZK,QACAE,EAAeN,EAAfM,WAmBR,OACI,oCACI,4BAAQxB,MAAO2B,EAAMyB,QApBD,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC1B,GAAIL,OAAOC,QAAP,yBAAiCI,EAAOrD,MAAxC,MAAkD,CACtD,IAAMsD,EAAU,YAAOhC,GACjBjB,EACNiD,EACKzB,OAAOyB,EACPR,WAAU,SAAAC,GAAM,OAAGA,EAAOpB,OAAQ0B,EAAOrD,SAAS,GAAG,GACrD0B,GAELD,EAAqBpB,GACpBO,MAAK,SAACC,GACHP,QAAQC,IAAR,kBAAuBM,EAASc,OAChCH,EAAW8B,SAQX,YCdNC,EAAe,CACjBC,QAAS,CACLC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAElBC,QAAS,CACLP,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAMhBE,EAAsB,SAAAjC,GACxB,OAAOuB,EAAavB,IAGTkC,EAzCO,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAO5C,EAAe,EAAfA,UACpBQ,EAA0BoC,EAA1BpC,WAAYC,EAAcmC,EAAdnC,WACnB,OAAGD,GACHqC,YAAW,kBAAM7C,EAAU,MAAI,KAE3B,yBAAK8C,MAAOJ,EAAoBjC,IAC3BD,IAIG,MCuDDuC,EA3DH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRlC,EADQ,KACCE,EADD,OAEoBgC,mBAAS,IAF7B,mBAERjC,EAFQ,KAEGE,EAFH,OAGsB+B,mBAAS,IAH/B,mBAGRzE,EAHQ,KAGI0E,EAHJ,OAIgBD,mBAAS,IAJzB,mBAIRjD,EAJQ,KAICE,EAJD,OAKe+C,mBAAS,IALxB,mBAKRJ,EALQ,KAKC5C,EALD,KAQVN,EAAS,CAACoB,UAASC,YAAWxC,aAAYwB,UAAS6C,UACnDjD,EAAe,CAACqB,aAAYC,eAAcgC,gBAAehD,aAAYD,aAErEa,EAAiB,SAACqC,EAAUC,GAChC,OAAO,SAAC9B,GACN,IAAM+B,EAAW/B,EAAMS,OAAOrD,MAC9BM,QAAQC,IAAIkE,EAAU,IAAIE,GAC1BD,EAAOC,KAGLC,EAAgBxC,EAAe,cAAcoC,GACnDK,qBAAU,WACRC,IAAgClE,MAAK,SAAAmE,GAAI,OAAIvD,EAAWuD,QAEzD,CAACZ,IASF,IAAIa,EAAe,YAAO1D,GAC1B,GAAiB,KAAdxB,EAAkB,CAEnB,IAAMmF,EAAenF,EAAWoF,cAChC5E,QAAQC,IAAI,mBAAoB0E,GAChC3E,QAAQC,IAAIe,EAAQ,GAAGK,KAAKuD,cAAcC,WAAWF,IACrDD,EAAkBA,EAAgBI,QAAO,SAAArC,GAAM,OAAIA,EAAOpB,KAAKuD,cAAcC,WAAWF,MAI1F,OACE,6BACE,yCACE,kBAAC,EAAD,CAAed,OAAQA,EAAQ5C,UAAWA,IAC1C,kBAAC,EAAD,CAAQzB,WAAYA,EAAYC,QAAS6E,IAC3C,yCACE,kBAAC,EAAD,CAAQ3D,OAAQA,EAAQC,aAAcA,EAAckB,eAAgBA,IACtE,uCACC4C,EAAgBK,KAAI,SAAAtC,GAAM,OAC3B,yBAAKuC,IAAKvC,EAAOpB,MACdoB,EAAOpB,KADV,IACiBoB,EAAO1B,OACtB,kBAACkE,EAAD,CAAoB5D,KAAMoB,EAAOpB,KAAMV,OAAQA,EAAQC,aAAcA,IACrE,mCCzDRsE,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.c7886705.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchName, handler}) =>{\n\n    return (\n    <p>Filter: <input\n    value={searchName}\n    onChange={handler}\n    />\n    </p>\n    )\n}\n\nexport default Filter","import axios from 'axios'\n\nconst restURL = '/api';\n\nconst uploadNewPerson = newPerson =>{\n    return axios\n      .post(`${restURL}/persons`,newPerson)\n      \n    \n  }\n\nconst deletePerson = personID => {\n  console.log(`Deleting ${personID}...`)\n  return axios\n  .delete(`${restURL}/persons/${personID}`)\n  \n}\n\nconst replaceNumber = (personID, newPersonDetails) => {\n  return axios\n    .put(`${restURL}/persons/${personID}`,newPersonDetails)\n    \n}\n\nconst getPersons = () => {\n  return axios\n  .get(`${restURL}/persons`)\n  .then(response => response.data)\n}\nexport default { uploadNewPerson, deletePerson, replaceNumber, getPersons}","\nimport React from 'react'\nimport service from '../services/jsonServerRequests'\n\nconst AddNew = ({states,stateSetters,newTextHandler}) =>{\n\n    const { newName, newNumber, persons} = states\n    const { setNewName, setNewNumber, setPersons, setStatus } = stateSetters\n    const newNameHandler = newTextHandler(\"Name\",setNewName)\n    const newNumberHandler = newTextHandler(\"Number\",setNewNumber)\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const newPerson ={\n          name: newName,\n          number: newNumber\n        }\n        const existingPersonIndex = persons.findIndex(person => person.name === newPerson.name)\n        const existingPerson = persons[existingPersonIndex]\n        console.log(existingPerson)\n        if (existingPerson) {\n          if(window.confirm(\n            `${newPerson.name} already exists in phonebook, would you like to update number from \n            ${existingPerson.number} to ${newPerson.number}? `)\n            ){\n              updateNumber({existingPerson,newPerson,states,stateSetters,existingPersonIndex})\n              // window.alert(`FUNCTION NOT IMPLEMENTED`)\n            }\n          setNewName('')\n          setNewNumber('')\n        }\n        // else if (newPerson.name === '') {\n        //   window.alert (\"Name cannot be empty\")\n        // }\n        else{\n          setPersons(persons.concat(newPerson))\n          service.uploadNewPerson(newPerson).then(response => {\n            setStatus({\n              statusText:`Added ${response.data.name}`,\n              statusType:`success`\n            })\n            setNewName('')\n            setNewNumber('')\n          }).catch(error =>{\n            console.log(error.response)\n            setStatus({\n              statusText:error.response.data,\n              statusType:`failure`\n            })\n            \n          }\n            )\n\n          \n        }\n      }\n\n    return (\n        <>\n        <form onSubmit={addPerson}>\n        <div>\n          name: <input \n          value={newName}\n          onChange={newNameHandler}\n          />\n          <div>\n            number: <input\n            value={newNumber}\n            onChange={newNumberHandler} \n            />\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <div>debug: {newName}</div>\n    </>\n    )\n}\n\nconst updateNumber = ({existingPerson,newPerson,states,stateSetters,existingPersonIndex}) => {\n  const updatedPerson = {...existingPerson,number:newPerson.number}\n  const {persons} = states\n  const {setStatus,setPersons} = stateSetters;\n  service\n  .replaceNumber(existingPerson.id,updatedPerson)\n  .then(response => {\n    console.log(`${response.data.name}'s number updated`)\n    const personsUpdated = [...persons]\n    personsUpdated.splice(existingPersonIndex,1)  //should have used filter instead\n    setPersons(personsUpdated.concat(response.data))\n    setStatus({\n      statusText:`${response.data.name}'s number updated`,\n      statusType:`success`\n    })\n  })\n  .catch(error => {\n    console.log(error.response)\n    setStatus({\n      statusText:error.response.data,\n      statusType:`failure`\n    })\n  })\n}\n\n\nexport default AddNew","import React from 'react'\nimport service from \"../services/jsonServerRequests\";\n\n\n\n\n\nconst DeletePersonButton = ({name, states, stateSetters}) =>{\n    const { persons } = states\n    const { setPersons } = stateSetters\n    const deleteButtonClicked = ({target}) => {\n        if (window.confirm(`Confirm delete ${target.value}?`)){\n        const newPersons = [...persons]\n        const personID = \n        newPersons\n            .splice(newPersons\n            .findIndex(person=> person.name ===target.value) , 1)[0]\n            .id\n        \n        service.deletePerson(personID)\n        .then((response) => {\n            console.log(`Deleted ${response.name}`)\n            setPersons(newPersons)\n        })\n        }\n        \n    }\n\n    return(\n        <>\n            <button value={name} onClick={deleteButtonClicked}>delete</button>\n            </>\n    )\n}\n\nexport default DeletePersonButton\n","import React from 'react';\n\nconst StatusMessage = ({status,setStatus}) => {\n    const {statusText, statusType} = status\n    if(statusText) {\n    setTimeout(() => setStatus({}),5000)\n    return (\n        <div style={statusStyleSelector(statusType)}>\n            {statusText}\n        </div>\n    )\n    }\n    else return null\n    \n}\n\nconst statusStyles = {\n    success: {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    },\n    failure: {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,       \n    }\n}\n\n\n\nconst statusStyleSelector = statusType => {\n    return statusStyles[statusType]\n}\n\nexport default StatusMessage","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport AddNew from './components/AddNew'\nimport DeletePersonButton from \"./components/DeletePerson\";\nimport axios from 'axios'\nimport StatusMessage from './components/StatusMessage'\nimport jsonServerRequests from './services/jsonServerRequests';\n\nconst App = () => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [ persons, setPersons ] = useState([]) \n  const [ status , setStatus ] = useState({})\n\n  \n  const states = {newName, newNumber, searchName, persons, status}\n  const stateSetters = {setNewName, setNewNumber, setSearchName, setPersons, setStatus}\n\n  const newTextHandler = (inputName,setter) => {\n    return (event) => {\n      const newValue = event.target.value\n      console.log(inputName,\" \",newValue)\n      setter(newValue)\n    }\n  }\n  const searchHandler = newTextHandler(\"Search Name\",setSearchName)\n  useEffect(() => {\n    jsonServerRequests.getPersons().then(resp => setPersons(resp))\n  }\n  ,[status])\n\n  \n\n \n  \n\n\n\n  let filteredPersons = [...persons]\n  if(searchName !=='') {\n    \n    const searchString = searchName.toUpperCase()\n    console.log(\"Searching term: \", searchString)\n    console.log(persons[0].name.toUpperCase().startsWith(searchString))\n    filteredPersons = filteredPersons.filter(person => person.name.toUpperCase().startsWith(searchString))\n  }\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <StatusMessage status={status} setStatus={setStatus} />\n        <Filter searchName={searchName} handler={searchHandler} />\n      <h2>Add a new</h2>\n        <AddNew states={states} stateSetters={stateSetters} newTextHandler={newTextHandler} />\n      <h2>Numbers</h2>\n      {filteredPersons.map(person =>\n      <div key={person.name}>\n        {person.name} {person.number}\n        <DeletePersonButton name={person.name} states={states} stateSetters={stateSetters} />\n        <br />\n      </div>)}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}