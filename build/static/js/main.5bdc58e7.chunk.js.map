{"version":3,"sources":["components/Filter.js","services/jsonServerRequests.js","components/AddNew.js","components/DeletePerson.js","components/StatusMessage.js","App.js","index.js"],"names":["Filter","searchName","handler","value","onChange","newPerson","console","log","name","axios","post","then","response","data","personID","delete","get","AddNew","states","stateSetters","newTextHandler","newName","newNumber","persons","setNewName","setNewNumber","setPersons","setStatus","newNameHandler","newNumberHandler","onSubmit","event","preventDefault","number","existingPersonIndex","findIndex","person","existingPerson","window","confirm","alert","concat","service","statusText","statusType","type","DeletePersonButton","onClick","target","newPersons","splice","id","statusStyles","success","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","failure","statusStyleSelector","StatusMessage","status","setTimeout","style","App","useState","setSearchName","inputName","setter","newValue","searchHandler","useEffect","jsonServerRequests","resp","filteredPersons","searchString","toUpperCase","startsWith","filter","map","key","DeletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bdc58e7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchName, handler}) =>{\n\n    return (\n    <p>Filter: <input\n    value={searchName}\n    onChange={handler}\n    />\n    </p>\n    )\n}\n\nexport default Filter","import axios from 'axios'\n\nconst restURL = '/api';\n\nconst uploadNewPerson = newPerson =>{\n    console.log(`Uploading ${newPerson.name}...`)\n    axios\n      .post(`${restURL}/persons`,newPerson)\n      .then(response => console.log(`Uploaded ${response.data.name}`)\n      )\n    \n  }\n\nconst deletePerson = personID => {\n  console.log(`Deleting ${personID}...`)\n  return axios\n  .delete(`${restURL}/persons/${personID}`)\n  \n}\n\nconst replaceNumber = (personID, newPersonDetails) => {\n  return axios\n    .put(`${restURL}/persons/${personID}`,newPersonDetails)\n    \n}\n\nconst getPersons = () => {\n  return axios\n  .get(`${restURL}/persons`)\n  .then(response => response.data)\n}\nexport default { uploadNewPerson, deletePerson, replaceNumber, getPersons}","\nimport React from 'react'\nimport service from '../services/jsonServerRequests'\n\nconst AddNew = ({states,stateSetters,newTextHandler}) =>{\n\n    const { newName, newNumber, persons} = states\n    const { setNewName, setNewNumber, setPersons, setStatus } = stateSetters\n    const newNameHandler = newTextHandler(\"Name\",setNewName)\n    const newNumberHandler = newTextHandler(\"Number\",setNewNumber)\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const newPerson ={\n          name: newName,\n          number: newNumber\n        }\n        const existingPersonIndex = persons.findIndex(person => person.name === newPerson.name)\n        const existingPerson = persons[existingPersonIndex]\n        console.log(existingPerson)\n        if (existingPerson) {\n          if(window.confirm(\n            `${newPerson.name} already exists in phonebook, would you like to update number from \n            ${existingPerson.number} to ${newPerson.number}? `)\n            ){\n              // updateNumber({existingPerson,newPerson,states,stateSetters,existingPersonIndex})\n              window.alert(`FUNCTION NOT IMPLEMENTED`)\n            }\n          setNewName('')\n          setNewNumber('')\n        }\n        else if (newPerson.name === '') {\n          window.alert (\"Name cannot be empty\")\n        }\n        else{\n          setPersons(persons.concat(newPerson))\n          service.uploadNewPerson(newPerson)\n          setStatus({\n            statusText:`Added ${newPerson.name}`,\n            statusType:`success`\n          })\n          setNewName('')\n          setNewNumber('')\n          \n        }\n      }\n\n    return (\n        <>\n        <form onSubmit={addPerson}>\n        <div>\n          name: <input \n          value={newName}\n          onChange={newNameHandler}\n          />\n          <div>\n            number: <input\n            value={newNumber}\n            onChange={newNumberHandler} \n            />\n          </div>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <div>debug: {newName}</div>\n    </>\n    )\n}\n\nconst updateNumber = ({existingPerson,newPerson,states,stateSetters,existingPersonIndex}) => {\n  const updatedPerson = {...existingPerson,number:newPerson.number}\n  const {persons} = states\n  const {setStatus,setPersons} = stateSetters;\n  service\n  .replaceNumber(existingPerson.id,updatedPerson)\n  .then(response => {\n    console.log(`${response.data.name}'s number updated`)\n    const personsUpdated = [...persons]\n    personsUpdated.splice(existingPersonIndex,1)  //should have used filter instead\n    setPersons(personsUpdated.concat(response.data))\n    setStatus({\n      statusText:`${response.data.name}'s number updated`,\n      statusType:`success`\n    })\n  })\n  .catch(response => {\n    console.log(response.data)\n    setStatus({\n      statusText:`${updatedPerson.name} has been removed from the server.`,\n      statusType:`failure`\n    })\n  })\n}\n\n\nexport default AddNew","import React from 'react'\nimport service from \"../services/jsonServerRequests\";\n\n\n\n\n\nconst DeletePersonButton = ({name, states, stateSetters}) =>{\n    const { persons } = states\n    const { setPersons } = stateSetters\n    const deleteButtonClicked = ({target}) => {\n        if (window.confirm(`Confirm delete ${target.value}?`)){\n        const newPersons = [...persons]\n        const personID = \n        newPersons\n            .splice(newPersons\n            .findIndex(person=> person.name ===target.value) , 1)[0]\n            .id\n        \n        service.deletePerson(personID)\n        .then((response) => {\n            console.log(`Deleted ${response.name}`)\n            setPersons(newPersons)\n        })\n        }\n        \n    }\n\n    return(\n        <>\n            <button value={name} onClick={deleteButtonClicked}>delete</button>\n            </>\n    )\n}\n\nexport default DeletePersonButton\n","import React from 'react';\n\nconst StatusMessage = ({status,setStatus}) => {\n    const {statusText, statusType} = status\n    if(statusText) {\n    setTimeout(() => setStatus({}),5000)\n    return (\n        <div style={statusStyleSelector(statusType)}>\n            {statusText}\n        </div>\n    )\n    }\n    else return null\n    \n}\n\nconst statusStyles = {\n    success: {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    },\n    failure: {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,       \n    }\n}\n\n\n\nconst statusStyleSelector = statusType => {\n    return statusStyles[statusType]\n}\n\nexport default StatusMessage","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport AddNew from './components/AddNew'\nimport DeletePersonButton from \"./components/DeletePerson\";\nimport axios from 'axios'\nimport StatusMessage from './components/StatusMessage'\nimport jsonServerRequests from './services/jsonServerRequests';\n\nconst App = () => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [ persons, setPersons ] = useState([]) \n  const [ status , setStatus ] = useState({})\n\n  \n  const states = {newName, newNumber, searchName, persons, status}\n  const stateSetters = {setNewName, setNewNumber, setSearchName, setPersons, setStatus}\n\n  const newTextHandler = (inputName,setter) => {\n    return (event) => {\n      const newValue = event.target.value\n      console.log(inputName,\" \",newValue)\n      setter(newValue)\n    }\n  }\n  const searchHandler = newTextHandler(\"Search Name\",setSearchName)\n  useEffect(() => {\n    jsonServerRequests.getPersons().then(resp => setPersons(resp))\n  }\n  ,[status])\n\n  \n\n \n  \n\n\n\n  let filteredPersons = [...persons]\n  if(searchName !=='') {\n    \n    const searchString = searchName.toUpperCase()\n    console.log(\"Searching term: \", searchString)\n    console.log(persons[0].name.toUpperCase().startsWith(searchString))\n    filteredPersons = filteredPersons.filter(person => person.name.toUpperCase().startsWith(searchString))\n  }\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <StatusMessage status={status} setStatus={setStatus} />\n        <Filter searchName={searchName} handler={searchHandler} />\n      <h2>Add a new</h2>\n        <AddNew states={states} stateSetters={stateSetters} newTextHandler={newTextHandler} />\n      <h2>Numbers</h2>\n      {filteredPersons.map(person =>\n      <div key={person.name}>\n        {person.name} {person.number}\n        <DeletePersonButton name={person.name} states={states} stateSetters={stateSetters} />\n        <br />\n      </div>)}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}